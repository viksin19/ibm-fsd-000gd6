package comm.bean.DAO;

import java.util.List;

import javax.annotation.PostConstruct;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.query.Query;

import comm.customer.entity.Customer;
@Repository
public class CustomerDaoImpl implements CustomerDao {
     @Autowired
	private SessionFactory sessionfactory;
	private Session session;
	
	public CustomerDaoImpl() {
		super();
	}
     @PostConstruct
     public void createSession() {
    	 session = sessionfactory.openSession();
     }
	public CustomerDaoImpl(SessionFactory sessionfactory) {
		super();
		this.sessionfactory = sessionfactory;
	}

	public SessionFactory getSessionfactory() {
		return sessionfactory;
	}
	public void setSessionfactory(SessionFactory sessionfactory) {
		this.sessionfactory = sessionfactory;
	}
	
	@Transactional
	public void createCustomer(Customer customer) {
		// TODO Auto-generated method stub
		session.saveOrUpdate(customer);
	}
	@Transactional
	public List<Customer> getCustomer() {
		// TODO Auto-generated method stub
		Session currentsession = sessionfactory.getCurrentSession();
		
		Query<Customer> query = currentsession.createQuery("from Customer order by id",Customer.class);
		List<Customer> customers = query.getResultList();
		return customers;
	}
	@Transactional
	public void saveCustomer(Customer customer) {
		// TODO Auto-generated method stub
		Session currentsession = sessionfactory.getCurrentSession();
		currentsession.save(customer);
	}
	//@Transactional
	public void deletecustomer(int id) {
		Session currentsession = sessionfactory.openSession();
		currentsession.getTransaction().begin();
		Customer obj = currentsession.find(Customer.class, id);
		currentsession.delete(obj);
		currentsession.getTransaction().commit();
	}
	
	public void update(Customer customer) {
		// TODO Auto-generated method stub
		Session currentsession = sessionfactory.openSession();
		currentsession.getTransaction().begin();
		currentsession.merge(customer);
		currentsession.getTransaction().commit();
		
	}
	@Transactional
	public Customer find(int id) {
		Session currentsession = sessionfactory.getCurrentSession();
		Customer obj = currentsession.find(Customer.class, id);
		
		return obj;
	}
	@Transactional
	public List<Customer> searchbyfname(String searchkey) {
		// TODO Auto-generated method stub

		
		Query<Customer> query = session.createQuery("from Customer where firstname = :f",Customer.class);
		query.setParameter("f", searchkey);
		List<Customer> customers = query.getResultList();
		return customers;
	}
	@Transactional
	public List<Customer> searchbylname(String searchkey) {
		// TODO Auto-generated method stub

		
		Query<Customer> query = session.createQuery("from Customer where lastname = :l",Customer.class);
		query.setParameter("l", searchkey);
		List<Customer> customers = query.getResultList();
		System.out.println(customers);
		return customers;
	}
	@Transactional
	public List<Customer> searchbyemail(String searchkey) {
		// TODO Auto-generated method stub

		
		Query<Customer> query = session.createQuery("from Customer where email = :e",Customer.class);
		query.setParameter("e", searchkey);
		List<Customer> customers = query.getResultList();
		System.out.println(customers);
		return customers;
	}

}
